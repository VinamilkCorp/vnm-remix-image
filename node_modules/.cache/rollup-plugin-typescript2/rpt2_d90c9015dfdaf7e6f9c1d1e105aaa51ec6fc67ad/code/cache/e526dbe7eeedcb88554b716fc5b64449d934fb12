{"code":"import ImageTransformer, { supportedInputs, supportedOutputs, } from \"js-image-lib\";\nimport { MimeType } from \"../../types/file\";\nexport const pureTransformer = {\n    name: \"pureTransformer\",\n    supportedInputs,\n    supportedOutputs,\n    fallbackOutput: MimeType.PNG,\n    transform: async ({ data, contentType: inputContentType }, { contentType: outputContentType, width, height, fit, position, background, quality, loop, delay, blurRadius, rotate, flip, crop, compressionLevel, }) => {\n        const image = new ImageTransformer(data, inputContentType, {\n            background,\n            loop,\n            delay,\n            quality,\n            compressionLevel,\n        });\n        if (crop) {\n            image.crop(crop.x, crop.y, crop.width, crop.height);\n        }\n        if (width != null || height != null) {\n            // @ts-ignore at least one is a number\n            image.resize(width, height, {\n                fit,\n                position: position,\n            });\n        }\n        if (flip) {\n            image.flip(flip);\n        }\n        if (rotate && rotate !== 0) {\n            image.rotate(rotate);\n        }\n        if (blurRadius && blurRadius > 0) {\n            image.blur(blurRadius);\n        }\n        return image.toBuffer(outputContentType);\n    },\n};\n","references":["/Users/hnanh/Workspaces/remix-image/node_modules/js-image-lib/build/index.d.ts","/Users/hnanh/Workspaces/remix-image/src/types/file.ts","/Users/hnanh/Workspaces/remix-image/src/types/transformer.ts"],"dts":{"name":"/Users/hnanh/Workspaces/remix-image/build/server/transformers/pureTransformer.d.ts","writeByteOrderMark":false,"text":"import { Transformer } from \"../../types/transformer\";\nexport declare const pureTransformer: Transformer;\n"}}
