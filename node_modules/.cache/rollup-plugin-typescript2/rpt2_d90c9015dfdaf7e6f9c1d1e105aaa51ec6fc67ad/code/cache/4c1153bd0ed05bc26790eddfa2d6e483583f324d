{"code":"import { RemixImageError } from \"../../types/error\";\nasync function fetchImage(imgRequest) {\n    return await fetch(imgRequest);\n}\nexport const fetchResolver = async (_asset, url) => {\n    const imgRequest = new Request(url, {\n        headers: {\n            accept: \"image/*\",\n        },\n    });\n    const imageResponse = await fetchImage(imgRequest);\n    if (!imageResponse.ok) {\n        throw new RemixImageError(\"Failed to fetch image!\");\n    }\n    const arrBuff = await imageResponse.arrayBuffer();\n    if (!arrBuff || arrBuff.byteLength < 2) {\n        throw new RemixImageError(\"Invalid image retrieved from resolver!\");\n    }\n    const buffer = new Uint8Array(arrBuff);\n    const contentType = imageResponse.headers.get(\"content-type\");\n    return {\n        buffer,\n        contentType,\n    };\n};\n","references":["/Users/hnanh/Workspaces/remix-image/src/types/error.ts","/Users/hnanh/Workspaces/remix-image/src/types/file.ts","/Users/hnanh/Workspaces/remix-image/src/types/resolver.ts"],"dts":{"name":"/Users/hnanh/Workspaces/remix-image/build/server/resolvers/fetchResolver.d.ts","writeByteOrderMark":false,"text":"import type { Resolver } from \"../../types/resolver\";\nexport declare const fetchResolver: Resolver;\n"}}
